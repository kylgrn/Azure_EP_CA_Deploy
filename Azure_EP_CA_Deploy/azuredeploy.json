{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUserName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Username for local administrator account"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for local administrator account"
      }
    },
    "networkvnetaddressprefix": {
      "type": "string",
      "defaultValue": "10.0.0.0/21",
      "metadata": {
        "description": "This is the address space used to create your VNET"
      }
    },
    "networkvnetname": {
      "type": "string",
      "defaultValue": "az_services_vnet",
      "metadata": {
        "description": "This is the name of your VNET"
      }
    },
    "networksubnet1name": {
      "type": "string",
      "defaultValue": "az_services_subnet_web",
      "metadata": {
        "description": "This is the name of your web tier subnet"
      }
    },
    "networksubnet1prefix": {
      "type": "string",
      "defaultValue": "10.0.1.0/24",
      "metadata": {
        "description": "This is the CIDR prefix for your web tier subnet"
      }
    },
    "networksubnet1nsgname": {
      "type": "string",
      "defaultValue": "az_services_nsg_web",
      "metadata": {
        "description": "This is the name of the nsg assigned to the web tier subnet"
      }
    },
    "networksubnet2name": {
      "type": "string",
      "defaultValue": "az_services_subnet_apps",
      "metadata": {
        "description": "This is the name of your apps subnet"
      }
    },
    "networksubnet2prefix": {
      "type": "string",
      "defaultValue": "10.0.2.0/24",
      "metadata": {
        "description": "This is the CIDR prefix for your apps subnet"
      }
    },
    "networksubnet2nsgname": {
      "type": "string",
      "defaultValue": "az_services_nsg_apps",
      "metadata": {
        "description": "This is the name of the nsg assigned to the apps subnet"
      }
    },
    "networksubnet3name": {
      "type": "string",
      "defaultValue": "az_services_subnet_data",
      "metadata": {
        "description": "This is the name of your data tier subnet"
      }
    },
    "networksubnet3prefix": {
      "type": "string",
      "defaultValue": "10.0.3.0/24",
      "metadata": {
        "description": "This is the CIDR prefix for your data tier subnet"
      }
    },
    "networksubnet3nsgname": {
      "type": "string",
      "defaultValue": "az_services_nsg_data",
      "metadata": {
        "description": "This is the name of the nsg assigned to the data tier subnet"
      }
    },
    "networksubnet4name": {
      "type": "string",
      "defaultValue": "az_services_subnet_ad",
      "metadata": {
        "description": "This is the name of your AD subnet"
      }
    },
    "networksubnet4prefix": {
      "type": "string",
      "defaultValue": "10.0.4.0/27",
      "metadata": {
        "description": "This is the CIDR prefix for your AD subnet"
      }
    },
    "networksubnet4nsgname": {
      "type": "string",
      "defaultValue": "az_services_nsg_ad",
      "metadata": {
        "description": "This is the name of the nsg assigned to the AD subnet"
      }
    },
    "networksubnet5name": {
      "type": "string",
      "defaultValue": "az_services_subnet_adfs",
      "metadata": {
        "description": "This is the name of your ADFS subnet"
      }
    },
    "networksubnet5prefix": {
      "type": "string",
      "defaultValue": "10.0.4.32/27",
      "metadata": {
        "description": "This is the CIDR prefix for your ADFS subnet"
      }
    },
    "networksubnet5nsgname": {
      "type": "string",
      "defaultValue": "az_services_nsg_adfs",
      "metadata": {
        "description": "This is the name of the nsg assigned to the ADFS subnet"
      }
    },
    "networksubnet6name": {
      "type": "string",
      "defaultValue": "az_services_subnet_adfsdmz",
      "metadata": {
        "description": "This is the name of your ADFS DMZ subnet"
      }
    },
    "networksubnet6prefix": {
      "type": "string",
      "defaultValue": "10.0.4.128/27",
      "metadata": {
        "description": "This is the CIDR prefix for your ADFS DMZ subnet"
      }
    },
    "networksubnet6nsgname": {
      "type": "string",
      "defaultValue": "az_services_nsg_adfsdmz",
      "metadata": {
        "description": "This is the name of the nsg assigned to the ADFS DMZ subnet"
      }
    },
    "networksubnet7name": {
      "type": "string",
      "defaultValue": "az_services_subnet_mgmt",
      "metadata": {
        "description": "This is the name of your management subnet"
      }
    },
    "networksubnet7prefix": {
      "type": "string",
      "defaultValue": "10.0.0.128/27",
      "metadata": {
        "description": "This is the CIDR prefix for your management subnet"
      }
    },
    "networksubnet7nsgname": {
      "type": "string",
      "defaultValue": "az_services_nsg_mgmt",
      "metadata": {
        "description": "This is the name of the nsg assigned to the management subnet"
      }
    },
    "networkwappip": {
      "type": "string",
      "defaultValue": "az_services_pip_adfsdmz",
      "metadata": {
        "description": "This is the name of the public IP used for the WAP servers"
      }
    },
    "networklbadfsname": {
      "type": "string",
      "defaultValue": "az_services_lb_adfs",
      "metadata": {
        "description": "This is the name of the load balancer for the ADFS servers"
      }
    },
    "networklbwapname": {
      "type": "string",
      "defaultValue": "az_services_lb_wap",
      "metadata": {
        "description": "This is the name of the load balancer for the WAP servers"
      }
    },
    "serverdcfqdn": {
      "type": "string",
      "defaultValue": "azadds",
      "metadata": {
        "description": "This is the base name of your two domain controllers"
      }
    },
    "serverdcavset": {
      "type": "string",
      "defaultValue": "az_services_avset_ad",
      "metadata": {
        "description": "This is the name of the availability set for your DCs"
      }
    },
    "serverdcfqdnloopcount": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "This is the number of DCs that will be created via loop"
      }
    },
    "serveradfsfqdn": {
      "type": "string",
      "defaultValue": "azadfs",
      "metadata": {
        "description": "This is the base name of your two ADFS servers"
      }
    },
    "serveradfsfqdnloopcount": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "This is the number of ADFS servers that will be created via loop"
      }
    },
    "serveradfsavset": {
      "type": "string",
      "defaultValue": "az_services_avset_adfs",
      "metadata": {
        "description": "This is the name of the availability set for your ADFS servers"
      }
    },
    "serverwapfqdn": {
      "type": "string",
      "defaultValue": "azwap",
      "metadata": {
        "description": "This is the base name of your two WAP servers"
      }
    },
    "serverwapfqdnloopcount": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "This is the number of WAP servers that will be created via loop"
      }
    },
    "serverwapavset": {
      "type": "string",
      "defaultValue": "az_services_avset_wap",
      "metadata": {
        "description": "This is the name of the availability set for your WAP servers"
      }
    },
    "serverexchfqdn": {
      "type": "string",
      "defaultValue": "azexch",
      "metadata": {
        "description": "This is the base name of your two Exchange servers"
      }
    },
    "serverexchfqdnloopcount": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "This is the number of Exchange servers that will be created via loop"
      }
    },
    "serverexchavset": {
      "type": "string",
      "defaultValue": "az_services_avset_exch",
      "metadata": {
        "description": "This is the name of the availability set for your Exchange servers"
      }
    },
    "serveraadconnectfqdn": {
      "type": "string",
      "defaultValue": "azaadcon",
      "metadata": {
        "description": "This is the base name for your AAD Connect server"
      }
    }
  },
  "variables": {
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', parameters('networkvnetname'))]",
    "networkpublicIPAddressType": "Dynamic",
    "networkpublicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('networkwappip'))]",
    "networksubnet1nsgid": "[resourceID('Microsoft.Network/networkSecurityGroups/',parameters('networksubnet1nsgname'))]",
    "networksubnet2nsgid": "[resourceID('Microsoft.Network/networkSecurityGroups/',parameters('networksubnet2nsgname'))]",
    "networksubnet3nsgid": "[resourceID('Microsoft.Network/networkSecurityGroups/',parameters('networksubnet3nsgname'))]",
    "networksubnet4nsgid": "[resourceID('Microsoft.Network/networkSecurityGroups/',parameters('networksubnet4nsgname'))]",
    "networksubnet5nsgid": "[resourceID('Microsoft.Network/networkSecurityGroups/',parameters('networksubnet5nsgname'))]",
    "networksubnet6nsgid": "[resourceID('Microsoft.Network/networkSecurityGroups/',parameters('networksubnet6nsgname'))]",
    "networksubnet7nsgid": "[resourceID('Microsoft.Network/networkSecurityGroups/',parameters('networksubnet7nsgname'))]",
    "networksubnet1ref": "[concat(variables('vnetID'), '/subnets/', parameters('networksubnet1name'))]",
    "networksubnet2ref": "[concat(variables('vnetID'), '/subnets/', parameters('networksubnet2name'))]",
    "networksubnet3ref": "[concat(variables('vnetID'), '/subnets/', parameters('networksubnet3name'))]",
    "networksubnet4ref": "[concat(variables('vnetID'), '/subnets/', parameters('networksubnet4name'))]",
    "networksubnet5ref": "[concat(variables('vnetID'), '/subnets/', parameters('networksubnet5name'))]",
    "networksubnet6ref": "[concat(variables('vnetID'), '/subnets/', parameters('networksubnet6name'))]",
    "networksubnet7ref": "[concat(variables('vnetID'), '/subnets/', parameters('networksubnet7name'))]",
    "networklbadfsref": "[resourceId('Microsoft.Network/LoadBalancers',parameters('networklbadfsname'))]",
    "networklbwapref": "[resourceId('Microsoft.Network/LoadBalancers',parameters('networklbwapname'))]",
    "storagetype": "Standard_LRS",
    "storageName": "[concat('identity', uniqueString(resourceGroup().id))]",
    "serverStorageAccountContainerName": "vhds",
    "serverdcvmsize": "Standard_A3",
    "serveradfsvmsize": "Standard_A2",
    "serverwapvmsize": "Standard_A3",
    "serverexchangevmsize": "Standard_A5",
    "serveraadconnectvmsize": "Standard_D3_v2",
    "serverImagePublisher": "MicrosoftWindowsServer",
    "serverImageOffer": "WindowsServer",
    "serverwindowsosversion": "2012-R2-Datacenter",
    "serverdcnicname": "[concat(parameters('serverdcfqdn'),'nic')]",
    "serverdcosdiskname": "[concat(parameters('serverdcfqdn'),'OSDisk')]",
    "serveradfsosdiskname": "[concat(parameters('serveradfsfqdn'),'OSDisk')]",
    "serverwaposdiskname": "[concat(parameters('serverwapfqdn'),'OSDisk')]",
    "serverexchosdiskname": "[concat(parameters('serverexchfqdn'),'OSDisk')]",
    "serveraadconnectosdiskname": "[concat(parameters('serveraadconnectfqdn'),'OSDisk')]",
    "serveradfsnicname": "[concat(parameters('serveradfsfqdn'),'nic')]",
    "serverwapnicname": "[concat(parameters('serverwapfqdn'),'nic')]",
    "serverexchnicname": "[concat(parameters('serverexchfqdn'),'nic')]",
    "serveraadconnectnicname": "[concat(parameters('serveraadconnectfqdn'),'nic')]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "name": "[parameters('networksubnet1nsgname')]",
      "tags": {
        "displayName": "NSG - Web"
      },
      "properties": {
        "securityRules": [
          {
            "name": "ADFS_Proxy_deny",
            "properties": {
              "description": "All_adfs_proxy.deny",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "[parameters('networksubnet6prefix')]",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 101,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "name": "[parameters('networksubnet2nsgname')]",
      "tags": {
        "displayName": "NSG - Apps"
      },
      "properties": {
        "securityRules": [
          {
            "name": "ADFS_Proxy_deny",
            "properties": {
              "description": "All_adfs_proxy.deny",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "[parameters('networksubnet6prefix')]",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 102,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "name": "[parameters('networksubnet3nsgname')]",
      "tags": {
        "displayName": "NSG - Data"
      },
      "properties": {
        "securityRules": [
          {
            "name": "ADFS_Proxy_deny",
            "properties": {
              "description": "All_adfs_proxy.deny",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "[parameters('networksubnet6prefix')]",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 101,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "name": "[parameters('networksubnet4nsgname')]",
      "tags": {
        "displayName": "NSG - AD"
      },
      "properties": {
        "securityRules": [
          {
            "name": "ADFS_Proxy_deny",
            "properties": {
              "description": "All_adfs_proxy.deny",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "[parameters('networksubnet6prefix')]",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 101,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "name": "[parameters('networksubnet5nsgname')]",
      "tags": {
        "displayName": "NSG - ADFS"
      },
      "properties": {
        "securityRules": [
          {
            "name": "HTTPS-Allow",
            "properties": {
              "description": "All_Internet.inboud.https.allow",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "[parameters('networksubnet6prefix')]",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "name": "[parameters('networksubnet6nsgname')]",
      "tags": {
        "displayName": "NSG - ADFSDMZ"
      },
      "properties": {
        "securityRules": [
          {
            "name": "HTTPS-Allow",
            "properties": {
              "description": "All_Internet.inboud.https.allow",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "[parameters('networksubnet6prefix')]",
              "access": "Allow",
              "priority": 101,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "name": "[parameters('networksubnet7nsgname')]",
      "tags": {
        "displayName": "NSG - Mgmt"
      },
      "properties": {
        "securityRules": [
          {
            "name": "ADFS_Proxy_deny",
            "properties": {
              "description": "All_adfs_proxy.deny",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "[parameters('networksubnet6prefix')]",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 101,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('networkvnetname')]",
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[resourceGroup().location]",
      "dependsON": [
        "[resourceID('Microsoft.Network/networkSecurityGroups/',parameters('networksubnet1nsgname'))]",
        "[resourceID('Microsoft.Network/networkSecurityGroups/',parameters('networksubnet2nsgname'))]",
        "[resourceID('Microsoft.Network/networkSecurityGroups/',parameters('networksubnet3nsgname'))]",
        "[resourceID('Microsoft.Network/networkSecurityGroups/',parameters('networksubnet4nsgname'))]",
        "[resourceID('Microsoft.Network/networkSecurityGroups/',parameters('networksubnet5nsgname'))]",
        "[resourceID('Microsoft.Network/networkSecurityGroups/',parameters('networksubnet6nsgname'))]",
        "[resourceID('Microsoft.Network/networkSecurityGroups/',parameters('networksubnet7nsgname'))]"
      ],
      "tags": {
        "displayName": "Virtual Network"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('networkvnetaddressprefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('networksubnet1Name')]",
            "properties": {
              "addressPrefix": "[parameters('networksubnet1prefix')]",
              "networkSecurityGroup": {
                "id": "[variables('networksubnet1nsgid')]"
              }
            }
          },
          {
            "name": "[parameters('networksubnet2Name')]",
            "properties": {
              "addressPrefix": "[parameters('networksubnet2prefix')]",
              "networkSecurityGroup": {
                "id": "[variables('networksubnet2nsgid')]"
              }
            }
          },
          {
            "name": "[parameters('networksubnet3Name')]",
            "properties": {
              "addressPrefix": "[parameters('networksubnet3prefix')]",
              "networkSecurityGroup": {
                "id": "[variables('networksubnet3nsgid')]"
              }
            }
          },
          {
            "name": "[parameters('networksubnet4Name')]",
            "properties": {
              "addressPrefix": "[parameters('networksubnet4prefix')]",
              "networkSecurityGroup": {
                "id": "[variables('networksubnet4nsgid')]"
              }
            }
          },
          {
            "name": "[parameters('networksubnet5Name')]",
            "properties": {
              "addressPrefix": "[parameters('networksubnet5prefix')]",
              "networkSecurityGroup": {
                "id": "[variables('networksubnet5nsgid')]"
              }
            }
          },
          {
            "name": "[parameters('networksubnet6Name')]",
            "properties": {
              "addressPrefix": "[parameters('networksubnet6prefix')]",
              "networkSecurityGroup": {
                "id": "[variables('networksubnet6nsgid')]"
              }
            }
          },
          {
            "name": "[parameters('networksubnet7Name')]",
            "properties": {
              "addressPrefix": "[parameters('networksubnet7prefix')]",
              "networkSecurityGroup": {
                "id": "[variables('networksubnet7nsgid')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "name": "[parameters('networklbadfsname')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('networkvnetname'))]"
      ],
      "tags": {
        "displayName": "Load Balancer -ADFS"
      },
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontEnd",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('networksubnet5ref')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "loadBalancerBackEnd"
          }
        ],
        "loadBalancingRules": [
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('networklbadfsname')), '/frontendIpConfigurations/loadBalancerFrontEnd')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('networklbadfsname')), '/backendAddressPools/loadBalancerBackEnd')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('networklbadfsname')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "idleTimeoutInMinutes": 15
            },
            "name": "lbrule"
          }
        ],
        "probes": [
          {
            "properties": {
              "protocol": "Tcp",
              "port": 443,
              "intervalInSeconds": 15,
              "numberOfProbes": 2
            },
            "name": "lbprobe"
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "name": "[parameters('networklbwapname')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('networkvnetname'))]",
        "[concat('Microsoft.Network/publicIPAddresses/',parameters('networkwappip'))]"
      ],
      "tags": {
        "displayName": "Load Balancer - WAP"
      },
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontEnd",
            "properties": {
              "publicIPAddress": {
                "id": "[concat('Microsoft.Network/publicIPAddresses/',parameters('networkwappip'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "loadBalancerBackEnd"
          }
        ],
        "loadBalancingRules": [
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('networklbwapname')), '/frontendIpConfigurations/loadBalancerFrontEnd')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('networklbwapname')), '/backendAddressPools/loadBalancerBackEnd')]"
              },
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('networklbwapname')), '/probes/lbprobe')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "idleTimeoutInMinutes": 15
            },
            "name": "lbrule"
          }
        ],
        "probes": [
          {
            "properties": {
              "protocol": "Tcp",
              "port": 443,
              "intervalInSeconds": 15,
              "numberOfProbes": 2
            },
            "name": "lbprobe"
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('networkwappip')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('networkpublicIPAddressType')]"
      },
      "tags": {
        "displayName": "Public IP"
      }
    },
    {
      "name": "[variables('storageName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "Storage Account"
      },
      "properties": {
        "accountType": "[variables('storagetype')]",
        "Description": "Storage account ot houes the identity components for ADFS"
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[parameters('serverdcavset')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {},
      "tags": {
        "displayName": "Availability Set - DCs"
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[parameters('serveradfsavset')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {},
      "tags": {
        "displayName": "Availability Set - ADFS"
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[parameters('serverwapavset')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {},
      "tags": {
        "displayName": "Availability Set - WAP"
      }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[parameters('serverexchavset')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {},
      "tags": {
        "displayName": "Availability Set - Exch"
      }
    },
    {
      "name": "[concat(variables('serverdcnicname'), copyIndex())]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[variables('vnetID')]"
      ],
      "copy": {
        "name": "[concat(variables('serverdcnicname'), 'NICCopy')]",
        "count": "[parameters('serverdcfqdnloopcount')]"
      },
      "tags": {
        "displayName": "NICS - DCs",
        "Workloads": "Identity"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[concat(variables('vnetID'),'/subnets/',parameters('networksubnet4name'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[concat(variables('serveradfsnicname'), copyIndex())]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[variables('vnetID')]",
        "[variables('networklbadfsref')]"
      ],
      "copy": {
        "name": "[concat(variables('serveradfsnicname'), 'NICCopy')]",
        "count": "[parameters('serveradfsfqdnloopcount')]"
      },
      "tags": {
        "displayName": "NICS - ADFS",
        "Workloads": "Identity"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[concat(variables('vnetID'),'/subnets/',parameters('networksubnet5name'))]"
              },
              "Loadbalancerbackendaddresspools": [
                {
                  "id": "[concat(variables('networklbadfsref'), '/backendAddressPools/','LoadBalancerBackEnd')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "name": "[concat(variables('serverwapnicname'), copyIndex())]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[variables('vnetID')]",
        "[variables('networklbwapref')]"
      ],
      "copy": {
        "name": "[concat(variables('serverwapnicname'), 'NICCopy')]",
        "count": "[parameters('serverwapfqdnloopcount')]"
      },
      "tags": {
        "displayName": "NICS - WAP",
        "Workloads": "Identity"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[concat(variables('vnetID'),'/subnets/',parameters('networksubnet6name'))]"
              },
              "Loadbalancerbackendaddresspools": [
                {
                  "id": "[concat(variables('networklbwapref'), '/backendAddressPools/','LoadBalancerBackEnd')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "name": "[concat(variables('serverexchnicname'), copyIndex())]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[variables('vnetID')]"
      ],
      "copy": {
        "name": "[concat(variables('serverexchnicname'), 'NICCopy')]",
        "count": "[parameters('serverwapfqdnloopcount')]"
      },
      "tags": {
        "displayName": "NICS - Exch",
        "Workloads": "Identity"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[concat(variables('vnetID'),'/subnets/',parameters('networksubnet2name'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[concat(variables('serveraadconnectnicname'))]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[variables('vnetID')]"
      ],
      "tags": {
        "displayName": "NICS - AADConnect",
        "Workloads": "Identity"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[concat(variables('vnetID'),'/subnets/',parameters('networksubnet2name'))]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('serverdcfqdn'),copyIndex())]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "copy": {
        "name": "VirtualMachineLoop",
        "count": "[parameters('serverdcfqdnloopcount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('serverdcnicname'),copyIndex())]",
        "[concat('Microsoft.Compute/availabilitySets/', parameters('serverdcavset'))]"
      ],
      "tags": {
        "displayName": "Servers - DCs",
        "Workloads": "Identity"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('serverdcvmsize')]"
        },
        "availabilityset": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('serverdcavset'))]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('serverdcfqdn'), copyIndex())]",
          "adminUsername": "[parameters('adminUserName')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('serverImagePublisher')]",
            "offer": "[variables('serverImageOffer')]",
            "sku": "[variables('ServerWindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('serverdcosdiskname'), copyIndex())]",
            "vhd": {
              "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2016-01-01').primaryEndpoints.blob, variables('serverStorageAccountContainerName'), '/', parameters('serverdcfqdn'), copyIndex(), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "datadisks": [
            {
              "name": "[concat(parameters('serverdcfqdn'), copyIndex(), 'datadisk1')]",
              "disksizeGB": "500",
              "lun": 1,
              "vhd": {
                "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2016-01-01').primaryEndpoints.blob, variables('serverStorageAccountContainerName'), '/', parameters('serverdcfqdn'), copyIndex(), '-datadisk1', '.vhd')]"
              },
              "createoption": "empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('serverdcnicname'), copyIndex()))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('serveradfsfqdn'),copyIndex())]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "copy": {
        "name": "VirtualMachineLoop",
        "count": "[parameters('serveradfsfqdnloopcount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('serveradfsnicname'),copyIndex())]",
        "[concat('Microsoft.Compute/availabilitySets/', parameters('serveradfsavset'))]"
      ],
      "tags": {
        "displayName": "Servers - ADFS",
        "Workloads": "Identity"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('serveradfsvmsize')]"
        },
        "availabilityset": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('serveradfsavset'))]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('serveradfsfqdn'), copyIndex())]",
          "adminUsername": "[parameters('adminUserName')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('serverImagePublisher')]",
            "offer": "[variables('serverImageOffer')]",
            "sku": "[variables('ServerWindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('serveradfsosdiskname'), copyIndex())]",
            "vhd": {
              "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2016-01-01').primaryEndpoints.blob, variables('serverStorageAccountContainerName'), '/', parameters('serveradfsfqdn'), copyIndex(), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('serveradfsnicname'), copyIndex()))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('serverwapfqdn'),copyIndex())]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "copy": {
        "name": "VirtualMachineLoop",
        "count": "[parameters('serveradfsfqdnloopcount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('serverwapnicname'),copyIndex())]",
        "[concat('Microsoft.Compute/availabilitySets/', parameters('serverwapavset'))]"
      ],
      "tags": {
        "displayName": "Servers - WAP",
        "Workloads": "Identity"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('serverwapvmsize')]"
        },
        "availabilityset": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('serverwapavset'))]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('serverwapfqdn'), copyIndex())]",
          "adminUsername": "[parameters('adminUserName')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('serverImagePublisher')]",
            "offer": "[variables('serverImageOffer')]",
            "sku": "[variables('ServerWindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('serverwaposdiskname'), copyIndex())]",
            "vhd": {
              "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2016-01-01').primaryEndpoints.blob, variables('serverStorageAccountContainerName'), '/', parameters('serverwapfqdn'), copyIndex(), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('serverwapnicname'), copyIndex()))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('serverexchfqdn'),copyIndex())]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "copy": {
        "name": "VirtualMachineLoop",
        "count": "[parameters('serverexchfqdnloopcount')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('serverexchnicname'),copyIndex())]",
        "[concat('Microsoft.Compute/availabilitySets/', parameters('serverexchavset'))]"
      ],
      "tags": {
        "displayName": "Servers - Exch",
        "Workloads": "Identity"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('serverexchangevmsize')]"
        },
        "availabilityset": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('serverexchavset'))]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('serverexchfqdn'), copyIndex())]",
          "adminUsername": "[parameters('adminUserName')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('serverImagePublisher')]",
            "offer": "[variables('serverImageOffer')]",
            "sku": "[variables('ServerWindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('serverexchosdiskname'), copyIndex())]",
            "vhd": {
              "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2016-01-01').primaryEndpoints.blob, variables('serverStorageAccountContainerName'), '/', parameters('serverexchfqdn'), copyIndex(), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('serverexchnicname'), copyIndex()))]"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('serveraadconnectfqdn')]",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('serveraadconnectnicname'))]"
      ],
      "tags": {
        "displayName": "Servers - AADConnect",
        "Workloads": "Identity"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('serveraadconnectvmsize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('serveraadconnectfqdn'))]",
          "adminUsername": "[parameters('adminUserName')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('serverImagePublisher')]",
            "offer": "[variables('serverImageOffer')]",
            "sku": "[variables('ServerWindowsOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(variables('serveraadconnectosdiskname'))]",
            "vhd": {
              "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageName')), '2016-01-01').primaryEndpoints.blob, variables('serverStorageAccountContainerName'), '/', parameters('serveraadconnectfqdn'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('serveraadconnectnicname')))]"
            }
          ]
        }
      }
    }
  ],
    "outputs":
    {
    }
    }